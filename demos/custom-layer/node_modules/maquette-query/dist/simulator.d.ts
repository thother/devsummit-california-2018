import { VNode } from 'maquette';
/**
 * Simulator to execute common user-interactions. Provides convenient wrappers for VNode.properties.on??? calls.
 */
export interface Simulator {
    /**
     * Will invoke VNode.properties.onkeydown
     */
    keyDown: (keyCode: number | string, targetElement?: any) => KeyboardEvent;
    /**
     * Will invoke VNode.properties.onkeyup
     */
    keyUp: (keyCode: number | string, targetElement?: any) => KeyboardEvent;
    /**
     * Will invoke VNode.properties.onmousedown
     */
    mouseDown: (targetElement?: any, parameters?: MouseEventParameters) => MouseEvent;
    /**
     * Will invoke VNode.properties.onmouseup
     */
    mouseUp: (targetElement?: any, parameters?: MouseEventParameters) => MouseEvent;
    /**
     * Will invoke VNode.properties.onmouseover
     */
    mouseOver: (targetElement?: any, parameters?: MouseEventParameters) => MouseEvent;
    /**
     * Will invoke VNode.properties.onmouseout
     */
    mouseOut: (targetElement?: any, parameters?: MouseEventParameters) => MouseEvent;
    /**
     * Will invoke VNode.properties.onclick
     */
    click: (targetElement?: any, parameters?: MouseEventParameters) => MouseEvent;
    /**
     * Will invoke VNode.properties.oninput
     */
    input: (targetElement?: any) => Event;
    /**
     * Will invoke VNode.properties.onchange
     */
    change: (targetElement?: any) => Event;
    /**
     * Will invoke VNode.properties.onfocus
     */
    focus: (targetElement?: any) => Event;
    /**
     * Will invoke VNode.properties.onblur
     */
    blur: (targetElement?: any) => Event;
    /**
     * Will invoke VNode.properties.onkeydown, VNode.properties.onkeyup, VNode.properties.onkeypress and VNode.properties.oninput
     */
    keyPress: (keyCodeOrChar: number | string, valueBefore: string, valueAfter: string, targetElement?: any) => void;
    /**
     * Will invoke VNode.properties.onmousewheel
     */
    mouseWheel: (deltas: {
        deltaX?: number;
        deltaY?: number;
    }, targetElement?: any) => Event;
}
export interface MouseEventParameters {
    pageX?: number;
    pageY?: number;
    which?: number;
    metaKey?: boolean;
    ctrlKey?: boolean;
    [key: string]: any;
}
export declare let createSimulator: (vnode: VNode, defaultFakeDomNode?: Object | undefined) => Simulator;
